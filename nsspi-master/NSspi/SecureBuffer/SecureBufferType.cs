using System;

namespace NSspi.Buffers
{
    /// <summary>
    /// Описывает тип и назначение безопасного буфера, передаваемого в собственный API. 
    /// </summary>
    internal enum BufferType : int
    {
        /// <summary>
        /// Буфер пуст. 
        /// </summary>
        Empty = 0x00,

        /// <summary>
        /// Буфер содержит данные сообщения. Данные сообщения могут быть в виде открытого текста или зашифрованного текста. 
        /// </summary>
        Data = 0x01,

        /// <summary>
        /// Буфер содержит непрозрачные данные токена аутентификации. 
        /// </summary>
        Token = 0x02,

        /// <summary>
        /// Буфер содержит параметры, специфичные для пакета безопасности. 
        /// </summary>
        Parameters = 0x03,

        /// <summary>
        /// Заполнитель буфера, указывающий на отсутствие некоторых данных. 
        /// </summary>
        Missing = 0x04,

        /// <summary>
        /// Буфер, переданный вызову API, содержал больше данных, чем необходимо для выполнения действия,
        /// например, в случае, когда соединение в потоковом режиме, которое не сохраняет пакеты сообщений, такие как TCP
        /// используется как транспорт. Дополнительные данные возвращаются вызывающей стороне в буфере этого типа. 
        /// </summary>
        Extra = 0x05,

        /// <summary>
        /// Буфер содержит трейлер данных безопасности, такой как подпись сообщения или маркер, или данные кадрирования. 
        /// </summary>
        Trailer = 0x06,

        /// <summary>
        /// Буфер содержит заголовок данных безопасности, например подпись сообщения, маркер или данные кадрирования. 
        /// </summary>
        Header = 0x07,

        Padding = 0x09,
        Stream = 0x0A,
        ChannelBindings = 0x0E,
        TargetHost = 0x10,
        ReadOnlyFlag = unchecked((int)0x80000000),
        ReadOnlyWithChecksum = 0x10000000
    }
}